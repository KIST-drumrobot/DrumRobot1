function d2r = d2RS(d2phi,d2theta,dphi,dtheta,phi,theta,h)
% stick rotation matrix second derivative
if h == "R"
    d2r = d2Rz(phi)*Rx(theta)*dphi^2 + dRz(phi)*dRx(theta)*dtheta*dphi + ...
        dRz(phi)*dRx(theta)*dphi*dtheta + Rz(phi)*d2Rx(theta)*dtheta^2 + ...
        dRz(phi)*Rx(theta)*d2phi + Rz(phi)*dRx(theta)*d2theta;
%     d2r = d2Ry(phi)*Rx(theta)*dphi^2 + dRy(phi)*dRx(theta)*dtheta*dphi + ...
%         dRy(phi)*dRx(theta)*dphi*dtheta + Ry(phi)*d2Rx(theta)*dtheta^2 + ...
%         dRy(phi)*Rx(theta)*d2phi + Ry(phi)*dRx(theta)*d2theta;
%     d2r = Rx(theta)*d2Rz(phi)*dphi^2 + dRx(theta)*dRz(phi)*dtheta*dphi + ...
%         dRx(theta)*dRz(phi)*dphi*dtheta + d2Rx(theta)*Rz(phi)*dtheta^2 + ...
%         Rx(theta)*dRz(phi)*d2phi + dRx(theta)*Rz(phi)*d2theta;
elseif h == "L"
    d2r = d2Rz(phi)*Ry(theta)*dphi^2 + dRz(phi)*dRy(theta)*dtheta*dphi + ...
        dRz(phi)*dRy(theta)*dphi*dtheta + Rz(phi)*d2Ry(theta)*dtheta^2 + ...
        dRz(phi)*Ry(theta)*d2phi + Rz(phi)*dRy(theta)*d2theta;
%     d2r = d2Rx(phi)*Ry(theta)*dphi^2 + dRx(phi)*dRy(theta)*dtheta*dphi + ...
%         dRx(phi)*dRy(theta)*dphi*dtheta + Rx(phi)*d2Ry(theta)*dtheta^2 + ...
%         dRx(phi)*Ry(theta)*d2phi + Rx(phi)*dRy(theta)*d2theta;
%     d2r = Ry(theta)*d2Rz(phi)*dphi^2 + dRy(theta)*dRz(phi)*dtheta*dphi + ...
%         dRy(theta)*dRz(phi)*dphi*dtheta + d2Ry(theta)*Rz(phi)*dtheta^2 + ...
%         Ry(theta)*dRz(phi)*d2phi + dRy(theta)*Rz(phi)*d2theta;
end